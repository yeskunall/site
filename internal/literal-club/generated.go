// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package literalclub

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// __booksByReadingStateAndProfileInput is used internally by genqlient
type __booksByReadingStateAndProfileInput struct {
	ProfileId string `json:"ProfileId"`
}

// GetProfileId returns __booksByReadingStateAndProfileInput.ProfileId, and is useful for accessing the field via an interface.
func (v *__booksByReadingStateAndProfileInput) GetProfileId() string { return v.ProfileId }

// booksByReadingStateAndProfileBooksByReadingStateAndProfileBook includes the requested fields of the GraphQL type Book.
type booksByReadingStateAndProfileBooksByReadingStateAndProfileBook struct {
	Id          string                                                                        `json:"id"`
	Slug        string                                                                        `json:"slug"`
	Title       string                                                                        `json:"title"`
	Description string                                                                        `json:"description"`
	Cover       string                                                                        `json:"cover"`
	Authors     []booksByReadingStateAndProfileBooksByReadingStateAndProfileBookAuthorsAuthor `json:"authors"`
}

// GetId returns booksByReadingStateAndProfileBooksByReadingStateAndProfileBook.Id, and is useful for accessing the field via an interface.
func (v *booksByReadingStateAndProfileBooksByReadingStateAndProfileBook) GetId() string { return v.Id }

// GetSlug returns booksByReadingStateAndProfileBooksByReadingStateAndProfileBook.Slug, and is useful for accessing the field via an interface.
func (v *booksByReadingStateAndProfileBooksByReadingStateAndProfileBook) GetSlug() string {
	return v.Slug
}

// GetTitle returns booksByReadingStateAndProfileBooksByReadingStateAndProfileBook.Title, and is useful for accessing the field via an interface.
func (v *booksByReadingStateAndProfileBooksByReadingStateAndProfileBook) GetTitle() string {
	return v.Title
}

// GetDescription returns booksByReadingStateAndProfileBooksByReadingStateAndProfileBook.Description, and is useful for accessing the field via an interface.
func (v *booksByReadingStateAndProfileBooksByReadingStateAndProfileBook) GetDescription() string {
	return v.Description
}

// GetCover returns booksByReadingStateAndProfileBooksByReadingStateAndProfileBook.Cover, and is useful for accessing the field via an interface.
func (v *booksByReadingStateAndProfileBooksByReadingStateAndProfileBook) GetCover() string {
	return v.Cover
}

// GetAuthors returns booksByReadingStateAndProfileBooksByReadingStateAndProfileBook.Authors, and is useful for accessing the field via an interface.
func (v *booksByReadingStateAndProfileBooksByReadingStateAndProfileBook) GetAuthors() []booksByReadingStateAndProfileBooksByReadingStateAndProfileBookAuthorsAuthor {
	return v.Authors
}

// booksByReadingStateAndProfileBooksByReadingStateAndProfileBookAuthorsAuthor includes the requested fields of the GraphQL type Author.
type booksByReadingStateAndProfileBooksByReadingStateAndProfileBookAuthorsAuthor struct {
	Id   string `json:"id"`
	Name string `json:"name"`
}

// GetId returns booksByReadingStateAndProfileBooksByReadingStateAndProfileBookAuthorsAuthor.Id, and is useful for accessing the field via an interface.
func (v *booksByReadingStateAndProfileBooksByReadingStateAndProfileBookAuthorsAuthor) GetId() string {
	return v.Id
}

// GetName returns booksByReadingStateAndProfileBooksByReadingStateAndProfileBookAuthorsAuthor.Name, and is useful for accessing the field via an interface.
func (v *booksByReadingStateAndProfileBooksByReadingStateAndProfileBookAuthorsAuthor) GetName() string {
	return v.Name
}

// booksByReadingStateAndProfileResponse is returned by booksByReadingStateAndProfile on success.
type booksByReadingStateAndProfileResponse struct {
	BooksByReadingStateAndProfile []booksByReadingStateAndProfileBooksByReadingStateAndProfileBook `json:"booksByReadingStateAndProfile"`
}

// GetBooksByReadingStateAndProfile returns booksByReadingStateAndProfileResponse.BooksByReadingStateAndProfile, and is useful for accessing the field via an interface.
func (v *booksByReadingStateAndProfileResponse) GetBooksByReadingStateAndProfile() []booksByReadingStateAndProfileBooksByReadingStateAndProfileBook {
	return v.BooksByReadingStateAndProfile
}

// The query or mutation executed by booksByReadingStateAndProfile.
const booksByReadingStateAndProfile_Operation = `
query booksByReadingStateAndProfile ($ProfileId: String!) {
	booksByReadingStateAndProfile(limit: 3, offset: 0, readingStatus: IS_READING, profileId: $ProfileId) {
		id
		slug
		title
		description
		cover
		authors {
			id
			name
		}
	}
}
`

func booksByReadingStateAndProfile(
	ctx_ context.Context,
	client_ graphql.Client,
	ProfileId string,
) (*booksByReadingStateAndProfileResponse, error) {
	req_ := &graphql.Request{
		OpName: "booksByReadingStateAndProfile",
		Query:  booksByReadingStateAndProfile_Operation,
		Variables: &__booksByReadingStateAndProfileInput{
			ProfileId: ProfileId,
		},
	}
	var err_ error

	var data_ booksByReadingStateAndProfileResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}
