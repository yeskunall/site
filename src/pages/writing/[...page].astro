---
import { getCollection } from "astro:content";

import PageLayout from "@/layouts/Base.astro";
import PostPreview from "@/components/blog/post-preview.astro";
import Pagination from "@/components/paginator.astro";

import { sortByDate } from "@/utils";

import type { CollectionEntry } from "astro:content";
import type { GetStaticPaths, Page } from "astro";

export const getStaticPaths = (async ({ paginate }) => {
  const allPosts = await getCollection("post");
  const allPostsByDate = sortByDate(allPosts);
  const pageSize = 5;

  return paginate(allPostsByDate, {
    pageSize,
  });
}) satisfies GetStaticPaths;

interface Props {
  page: Page<CollectionEntry<"post">>;
}

const { page } = Astro.props;

const meta = {
  title: "Read Kunall’s blog",
  description: "Everything I’ve written over the years.",
};

const paginationProps = {
  ...(page.url.prev && {
    prevUrl: {
      url: page.url.prev,
      text: `← Previous`,
    },
  }),
  ...(page.url.next && {
    nextUrl: {
      url: page.url.next,
      text: `Next →`,
    },
  }),
};
---

<PageLayout meta={meta}>
  <div class="mx-auto max-w-xl space-y-6">
    <div>
      <h3 class="text-xl font-medium leading-snug text-neutral-600">
        Writing
      </h3><p
        class="mt-1.5 font-serif text-lg font-medium leading-snug text-neutral-900/60"
      >
        Everything I’ve written over the years. I mainly write about my life,
        minimalism &amp; and the web.
      </p>
    </div>
    <div class="grid sm:grid-cols-[3fr_1fr]">
      <section aria-label="Paginated blog posts">
        <ul class="space-y-2 text-start">
          {
            page.data.map((post, index) => {
              return (
                // eslint-disable-next-line
                <li class="mb-1.5 flex flex-col gap-2 sm:mb-3 sm:flex-row">
                  <PostPreview
                    post={post}
                    as="h2"
                    data-animate
                    style={`--stagger:${index * 2}`}
                  />
                </li>
              );
            })
          }
        </ul>
        <Pagination {...paginationProps} />
      </section>
    </div>
  </div>
</PageLayout>

<style>
  @media (hover: hover) {
    ul:hover li {
      opacity: 0.3;
    }

    ul:hover li:hover {
      opacity: 1;
    }
  }
</style>
