---
import type { HTMLAttributes } from "astro/types";
import type { VariantProps } from "class-variance-authority";

import { cva } from "class-variance-authority";

import { cn } from "~/lib/utils";

interface Props
  extends HTMLAttributes<"button">,
    VariantProps<typeof variants> {
  icon?: string;
}

const variants = cva(
  "inline-flex items-center gap-x-1.5 justify-center p-2 flex-shrink-0 select-none align-top text-center font-sans duration-fast-02 ease-expressive-exit",
  {
    compoundVariants: [{ size: "medium", variant: "soft" }],
    variants: {
      size: {
        medium: "text-sm tracking-tighter font-medium rounded-md",
        small: "text-xs tracking-tight font-normal rounded-sm",
      },
      variant: {
        // `color (text-accent-12)` is a high-contrast variant
        soft: "bg-accent-a3 disabled:bg-gray-a3 text-accent-a11 disabled:text-gray-a8 focus-visible:outline focus-visible:outline-accent-8 focus-visible:outline-offset-[-1px] focus-visible:outline-2 hover:bg-accent-a4",
      },
    },
  },
);

// Set `defaultVariants` on the `<button />` using `Astro.props` instead
const {
  class: className,
  disabled,
  size = "medium",
  variant = "soft",
  ...rest
} = Astro.props;
---

<button
  class={cn(variants({ size, variant }), className)}
  disabled={disabled}
  {...rest}
>
  <slot />
</button>
