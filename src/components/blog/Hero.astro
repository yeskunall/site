---
import { blurhashToCssGradientString } from "@unpic/placeholder";
import { encode } from "blurhash";
import { getPixels } from "@unpic/pixels";
import { Image } from "@unpic/astro";

import { getFormattedDate } from "@/utils";

import type { CollectionEntry } from "astro:content";

interface Props {
  content: CollectionEntry<"post">;
}

const { content } = Astro.props;
const { heroImage } = content.data;

// Set a default value, but also check for the existence of a `heroImage` before
// rendering the `<img />`
// TODO(yeskunall): is there a way to avoid the TS error without setting a
// default `blurhash`?
let blurhash: string = "TPDI|4n$E3~qjsRk5DWp%00NW;xY";
const datetime = content.data.publishDate.toISOString();
const postDate = getFormattedDate(content.data.publishDate, { month: "long" });

if (heroImage) {
  const imageData = await getPixels(heroImage);
  const { data, height, width } = imageData;
  blurhash = encode(Uint8ClampedArray.from(data), width, height, 4, 4);
}
---

{
  blurhash && heroImage && (
    <figure class="mt-3">
      <Image
        background={blurhashToCssGradientString(blurhash)}
        class="rounded-md"
        aspectRatio={16 / 9}
        layout="fullWidth"
        src={heroImage}
      />
    </figure>
  )
}
<h1 class="mt-8 font-serif text-3xl font-semibold sm:mb-1">
  {content.data.title}
</h1>
<span class="mt-3 inline-block"
  ><p class="inline">Posted on&nbsp;</p><time
    class="font-serif text-sky-50/70"
    datetime={datetime}
    title={datetime}>{postDate}</time
  ></span
>
<p class="prose-equinox prose prose-base mt-8 font-serif text-base font-light">
  {content.data.description}
</p>
