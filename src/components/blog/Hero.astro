---
import { Balancer } from "react-wrap-balancer";
import { blurhashToCssGradientString } from "@unpic/placeholder";
import { encode } from "blurhash";
import { getPixels } from "@unpic/pixels";
import { Image } from "@unpic/astro";

import { getFormattedDate } from "@/utils";

import type { CollectionEntry } from "astro:content";

interface Props {
  content: CollectionEntry<"post">;
}

const { content } = Astro.props;
const { heroImage } = content.data;

// Set a default value, but also check for the existence of a `heroImage` before
// rendering the `<img />`
// TODO(yeskunall): is there a way to avoid the TS error without setting a
// default `blurhash`?
let blurhash: string = "TPDI|4n$E3~qjsRk5DWp%00NW;xY";
const datetime = content.data.publishDate.toISOString();
const postDate = getFormattedDate(content.data.publishDate, { month: "long" });

if (heroImage) {
  const imageData = await getPixels(heroImage);
  const { data, height, width } = imageData;
  blurhash = encode(Uint8ClampedArray.from(data), width, height, 4, 4);
}
---

{
  blurhash && heroImage && (
    <figure class="mt-3">
      <Image
        background={blurhashToCssGradientString(blurhash)}
        class="rounded-md"
        aspectRatio={16 / 9}
        layout="fullWidth"
        src={heroImage}
      />
    </figure>
  )
}
<div class="mt-8 flex flex-col text-green-100/90">
  <Balancer>
    <h1 class="font-serif text-3xl font-medium tracking-tight sm:mb-1">
      {content.data.title}
    </h1>
  </Balancer>
  <span class="mt-3 inline-block"
    ><p class="inline font-sans">Posted on&nbsp;</p><time
      class="font-serif text-green-100/70"
      datetime={datetime}
      title={datetime}>{postDate}</time
    ></span
  >
  <p
    class="prose prose-base prose-equinox mt-8 font-serif text-base font-light"
  >
    {content.data.description}
  </p>
</div>
