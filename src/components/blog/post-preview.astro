---
import { Balancer } from "react-wrap-balancer";
import { getFormattedDate } from "@/utils";

import type { CollectionEntry } from "astro:content";
import type { IElement } from "@/data/shared";

interface Props extends IElement {
  post: CollectionEntry<"post">;
  style: string;
  withDesc?: boolean;
}

const { post, as: Element = "div", style, withDesc = false } = Astro.props;
const date = new Date(post.data.publishDate);
const datetime = date.toISOString();
const postDate = getFormattedDate(date, {
  day: "numeric",
  month: "short",
  year: "numeric",
});
---

{/* eslint-disable max-len */}

<div class="group my-1.5 w-full cursor-pointer" data-animate style={style}>
  <a href={`/writing/${post.slug}/`} class="text-base" rel="prefetch">
    <time
      datetime={datetime}
      class="mb-1.5 select-none self-start font-serif text-neutral-950 transition-colors group-hover:text-neutral-950/70 sm:mb-3 sm:text-right sm:text-sm"
    >
      {postDate}
    </time>
    <Element
      class="-mt-0.5 break-words font-sans text-neutral-950/60 transition-colors group-hover:text-neutral-950/70"
    >
      <Balancer>{post.data.title}</Balancer>
    </Element>
    {
      withDesc && (
        <span class="line-clamp-3 block italic">{post.data.description}</span>
      )
    }
  </a>
</div>

<style>
  @keyframes enter {
    0% {
      opacity: 0;
      transform: translateY(10px);
    }

    to {
      opacity: 1;
      transform: none;
    }
  }

  [data-animate] {
    --delay: 120ms;
    --stagger: 0;
    --start: 0ms;
  }

  @media (prefers-reduced-motion: no-preference) {
    [data-animate] {
      animation: enter 0.6s both;
      animation-delay: calc(var(--delay) * var(--stagger) + var(--start));
    }
  }
</style>
